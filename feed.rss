<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>NSStudent</title><description>my swift lab</description><link>https://nsstudent.dev</link><language>en</language><lastBuildDate>Wed, 15 Jan 2020 22:18:32 +0100</lastBuildDate><pubDate>Wed, 15 Jan 2020 22:18:32 +0100</pubDate><ttl>250</ttl><atom:link href="https://nsstudent.dev/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://nsstudent.dev/posts/2020/January/Struct-Inits</guid><title>Create a custom struct initializer</title><description>Add a custom initializer for structs</description><link>https://nsstudent.dev/posts/2020/January/Struct-Inits</link><pubDate>Tue, 14 Jan 2020 13:20:00 +0100</pubDate><content:encoded><![CDATA[<h1>Create a custom struct initializer</h1><p>Structs create a default initializer when you implement one.</p><p>Sometimes you want to create another initializer to facilitate the code.</p><p>The problems appear when you try to introduce our initializer. the default constructor disappear. To avoid this problem the best way is to include our initializer inside an extension.</p><p>This way we'll keep the two builders</p><pre><code><span class="keyword">struct</span> Person {
    <span class="keyword">let</span> name: <span class="type">String</span>
    <span class="keyword">let</span> birthday: <span class="type">Date</span>
}

<span class="keyword">extension</span> <span class="type">Person</span> {
    <span class="keyword">init</span>(name: <span class="type">String</span>) {
        <span class="keyword">self</span>.<span class="property">name</span> = name
        <span class="keyword">self</span>.<span class="property">birthday</span> = <span class="type">Date</span>()
    }
}

<span class="keyword">let</span> person = <span class="type">Person</span>(name: <span class="string">"NSStudent"</span>, birthday: <span class="type">Date</span>(timeIntervalSince1970: <span class="number">426348250</span>))
<span class="keyword">let</span> baby = <span class="type">Person</span>(name: <span class="string">"john"</span>)
</code></pre>]]></content:encoded></item></channel></rss>